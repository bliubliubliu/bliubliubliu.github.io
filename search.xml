<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo博客优化——通过gulp压缩静态文件</title>
    <url>/2020/03/14/Hexo%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96%E2%80%94%E2%80%94%E9%80%9A%E8%BF%87gulp%E5%8E%8B%E7%BC%A9%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h3 id="1-安装gulp依赖"><a href="#1-安装gulp依赖" class="headerlink" title="1.安装gulp依赖"></a>1.安装gulp依赖</h3><p>1.在电脑的Hexo博客目录右键“Git Bash Here”，执行下面的命令安装gulp：</p>
<a id="more"></a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm insatll gulp</span><br></pre></td></tr></table></figure>

<p>2.再执行下面的命令，安装所需的gulp模块：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install gulp-concat</span><br><span class="line">npm install gulp-htmlclean</span><br><span class="line">npm install gulp-htmlmin&quot;</span><br><span class="line">npm install gulp-imagemin</span><br><span class="line">npm install gulp-minify-css</span><br><span class="line">npm install gulp-uglify</span><br></pre></td></tr></table></figure>

<p>注意：由于同时安装可能安装失败，这里对每个模块分开安装，安装失败时重新执行命令即可。</p>
<hr>
<h3 id="2-配置"><a href="#2-配置" class="headerlink" title="2.配置"></a>2.配置</h3><p>在博客根目录新建文件gulp.js，写入以下内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var gulp &#x3D; require(&#39;gulp&#39;),</span><br><span class="line">    uglify &#x3D; require(&#39;gulp-uglify&#39;),</span><br><span class="line">    cssmin &#x3D; require(&#39;gulp-minify-css&#39;),</span><br><span class="line">    imagemin &#x3D; require(&#39;gulp-imagemin&#39;),</span><br><span class="line">    htmlmin &#x3D; require(&#39;gulp-htmlmin&#39;),</span><br><span class="line">    htmlclean &#x3D; require(&#39;gulp-htmlclean&#39;);</span><br><span class="line">concat &#x3D; require(&#39;gulp-concat&#39;);</span><br><span class="line">&#x2F;&#x2F;JS压缩</span><br><span class="line">gulp.task(&#39;uglify&#39;, function() &#123;</span><br><span class="line">    return gulp.src([&#39;.&#x2F;public&#x2F;js&#x2F;**&#x2F;.js&#39;, &#39;!.&#x2F;public&#x2F;js&#x2F;**&#x2F;*min.js&#39;]) &#x2F;&#x2F;只是排除min.js文件还是不严谨，一般不会有问题，根据自己博客的修改我的修改为return gulp.src([&#39;.&#x2F;public&#x2F;**&#x2F;*.js&#39;,&#39;!.&#x2F;public&#x2F;zuoxi&#x2F;**&#x2F;*.js&#39;,,&#39;!.&#x2F;public&#x2F;radio&#x2F;**&#x2F;*.js&#39;])</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(gulp.dest(&#39;.&#x2F;public&#x2F;js&#39;)); &#x2F;&#x2F;对应修改为.&#x2F;public即可</span><br><span class="line">&#125;);</span><br><span class="line">&#x2F;&#x2F;public-fancybox-js压缩</span><br><span class="line">gulp.task(&#39;fancybox:js&#39;, function() &#123;</span><br><span class="line">    return gulp.src(&#39;.&#x2F;public&#x2F;vendors&#x2F;fancybox&#x2F;source&#x2F;jquery.fancybox.js&#39;)</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(gulp.dest(&#39;.&#x2F;public&#x2F;vendors&#x2F;fancybox&#x2F;source&#x2F;&#39;));</span><br><span class="line">&#125;);</span><br><span class="line">&#x2F;&#x2F; 合并 JS</span><br><span class="line">gulp.task(&#39;jsall&#39;, function() &#123;</span><br><span class="line">    return gulp.src(&#39;.&#x2F;public&#x2F;**&#x2F;*.js&#39;)</span><br><span class="line">        &#x2F;&#x2F; 压缩后重命名</span><br><span class="line">        .pipe(concat(&#39;app.js&#39;))</span><br><span class="line">        .pipe(gulp.dest(&#39;.&#x2F;public&#39;));</span><br><span class="line">&#125;);</span><br><span class="line">&#x2F;&#x2F;public-fancybox-css压缩</span><br><span class="line">gulp.task(&#39;fancybox:css&#39;, function() &#123;</span><br><span class="line">    return gulp.src(&#39;.&#x2F;public&#x2F;vendors&#x2F;fancybox&#x2F;source&#x2F;jquery.fancybox.css&#39;)</span><br><span class="line">        .pipe(cssmin())</span><br><span class="line">        .pipe(gulp.dest(&#39;.&#x2F;public&#x2F;vendors&#x2F;fancybox&#x2F;source&#x2F;&#39;));</span><br><span class="line">&#125;);</span><br><span class="line">&#x2F;&#x2F;CSS压缩</span><br><span class="line">gulp.task(&#39;cssmin&#39;, function() &#123;</span><br><span class="line">    return gulp.src([&#39;.&#x2F;public&#x2F;css&#x2F;main.css&#39;, &#39;!.&#x2F;public&#x2F;css&#x2F;*min.css&#39;])</span><br><span class="line">        .pipe(cssmin())</span><br><span class="line">        .pipe(gulp.dest(&#39;.&#x2F;public&#x2F;css&#x2F;&#39;));</span><br><span class="line">&#125;);</span><br><span class="line">&#x2F;&#x2F;图片压缩</span><br><span class="line">gulp.task(&#39;images&#39;, function() &#123;</span><br><span class="line">    gulp.src(&#39;.&#x2F;public&#x2F;images&#x2F;*.*&#39;)</span><br><span class="line">        .pipe(imagemin(&#123;</span><br><span class="line">            progressive: false</span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(&#39;.&#x2F;public&#x2F;images&#x2F;&#39;));</span><br><span class="line">&#125;);</span><br><span class="line">&#x2F;&#x2F; 压缩 public 目录 html文件 public&#x2F;**&#x2F;*.hmtl 表示public下所有文件夹中html，包括当前目录</span><br><span class="line">gulp.task(&#39;minify-html&#39;, function() &#123;</span><br><span class="line">    return gulp.src(&#39;.&#x2F;public&#x2F;**&#x2F;*.html&#39;)</span><br><span class="line">        .pipe(htmlclean())</span><br><span class="line">        .pipe(htmlmin(&#123;</span><br><span class="line">            removeComments: true,</span><br><span class="line">            minifyJS: true,</span><br><span class="line">            minifyCSS: true,</span><br><span class="line">            minifyURLs: true,</span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(&#39;.&#x2F;public&#39;))</span><br><span class="line">&#125;);</span><br><span class="line">gulp.task(&#39;build&#39;, [&#39;uglify&#39;, &#39;cssmin&#39;, &#39;fancybox:js&#39;, &#39;fancybox:css&#39;, &#39;jsall&#39;, &#39;images&#39;, &#39;minify-html&#39;]);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;, &#39;minify-html&#39;</span><br></pre></td></tr></table></figure>

<p>保存，配置完成，下次生成时，会自动压缩博客静态文件，优化博客访问速度。</p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>优化</tag>
        <tag>gulp</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo+Github博客搭建流程(win)</title>
    <url>/2020/02/25/Hexo-Github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B(win)/</url>
    <content><![CDATA[<h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><h3 id="1-注册Github账号"><a href="#1-注册Github账号" class="headerlink" title="1.注册Github账号"></a>1.注册Github账号</h3><h3 id="2-下载nodejs-Git官方安装包"><a href="#2-下载nodejs-Git官方安装包" class="headerlink" title="2.下载nodejs+Git官方安装包"></a>2.下载nodejs+Git官方安装包</h3><h3 id="3-保证网络畅通"><a href="#3-保证网络畅通" class="headerlink" title="3.保证网络畅通"></a>3.保证网络畅通</h3><a id="more"></a>

<hr>
<h2 id="搭建与发布"><a href="#搭建与发布" class="headerlink" title="搭建与发布"></a>搭建与发布</h2><h3 id="1-安装nodejs和Git"><a href="#1-安装nodejs和Git" class="headerlink" title="1.安装nodejs和Git"></a>1.安装nodejs和Git</h3><h3 id="2-以管理员的方式运行CMD进行下面的操作"><a href="#2-以管理员的方式运行CMD进行下面的操作" class="headerlink" title="2.以管理员的方式运行CMD进行下面的操作"></a>2.以管理员的方式运行CMD进行下面的操作</h3><p>1.首先给npm换源</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm config set registry https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure>

<p>2.安装hexo-cli</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p>3.新建一个blog文件夹，在这个文件夹下选择鼠标右键的Git Bash Here命令，初始化hexo在blog文件夹生成本地博客系统，在git bash下输入命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure>

<p>注意：这里如果失败，要把blog文件夹清空，再重复初始化操作。</p>
<p>4.安装hexo-deployer-git组件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure>

<h3 id="3-在Github账户上新建一个repository，其名称要与Github账户名相同"><a href="#3-在Github账户上新建一个repository，其名称要与Github账户名相同" class="headerlink" title="3.在Github账户上新建一个repository，其名称要与Github账户名相同"></a>3.在Github账户上新建一个repository，其名称要与Github账户名相同</h3><h3 id="4-修改博客系统的配置文件blog-config-yml"><a href="#4-修改博客系统的配置文件blog-config-yml" class="headerlink" title="4.修改博客系统的配置文件blog/_config.yml"></a>4.修改博客系统的配置文件blog/_config.yml</h3><p>找到最后的deploy项，改成下面这样：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;账户名&#x2F;账户名.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p>注意：冒号与后面的字符之间要留一个空格。</p>
<p>至此hexo博客基本搭建完成，可以顺利发布博客了。</p>
<h3 id="5-在blog文件夹下用git-bash执行以下命令发布博客"><a href="#5-在blog文件夹下用git-bash执行以下命令发布博客" class="headerlink" title="5.在blog文件夹下用git bash执行以下命令发布博客"></a>5.在blog文件夹下用git bash执行以下命令发布博客</h3><p>1.新建博客文章</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo n &quot;文章名&quot;</span><br></pre></td></tr></table></figure>

<p>该命令在blog/source/_posts/下生成”文章名.md“文件，可以用编辑器在里面先写好文章</p>
<p>2.执行清理命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure>

<p>3.执行生成命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure>

<p>4.本地预览</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p>此后可以在“localhost:4000”访问本地博客。</p>
<p>5.部署到Github</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p>此后可以在“账户名.github.io”访问部署到Github的博客。</p>
<hr>
<h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><p>1.从github下载主题包解压到blog/themes/new-theme里；</p>
<p>2.修改blog/_config.yml文件的theme项，改为新的主题文件夹名new-theme；</p>
<p>3.此时主题更换完成，在下一次部署时就会生效，主题个性化定制可通过修改主题跟目录下的_config.yml文件实现。</p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/02/25/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<a id="more"></a>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
